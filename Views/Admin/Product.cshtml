@{
    ViewData["Title"] = "Product";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/xlsx@0.18.2/dist/xlsx.full.min.js"></script>
    <style>

        input[type="file"] {
            color: transparent;
        }
    </style>
</head>
<body>
    <b>
    <span>Product List</span>
   
    <button for="execlupload"  id="Upload" class="btn btn-danger float-end mt-1 p-1">
        <i class="fas fa-file-upload"> </i> Upload
    </button>
   <input type="file" class="float-end bg-primary   p-1 " style="width:100px" id="file" name="file" required>
    <button class="btn btn-info float-end m-1 p-1" data-toggle="modal" data-target="#Modal">Add New Product</button>
    <button class="btn btn-success float-end m-1 p-1" id="download" @* onclick="downloadExcel()" *@>Download excel formate</button>
   
    </b>
    <div class="modal fade" id="Modal" tabindex="-1" aria-labelledby="ModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title "id="ModalLabel">Add Product</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" enctype="multipart/form-data" id="productForm">
                        <input type="hidden" id="IdForUpdateCategory" />
                        <div class="form-group">
                            <label for="cat_Id">Category Name</label>
                            <select name="CategoryId" class="form-control my-2" id="cat_Id" required>
                                <option selected disabled>Select Category</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="product_name">Product Name:</label>
                            <input type="text" class="form-control" id="product_name" name="ProductName" required />
                            <input type="hidden" id="hdnprodductid" name="Id" />
                        </div>
                        <div class="form-group">
                            <label for="product_price">Product Price:</label>
                            <input type="text" class="form-control numeric-input" id="product_price" name="productPrice" required />
                        </div>
                        <div class="form-group">
                            <label for="product_description">Product Description:</label>
                            <textarea class="form-control" id="product_description" name="productDescription" required></textarea>
                        </div>
                        <div class="form-group form-check">
                            <input type="checkbox" class="form-check-input" id="isactive" name="IsActive" checked>
                            <label class="form-check-label" for="isactive">Is Active</label>
                        </div>
                        <div class="form-group">
                            <label for="product_Image">Product Image:</label>
                            <input type="file" accept="image/*" class="form-control" id="product_Image" name="file" />
                            <span id="errormessage"></span>
                            <img id="blah" src="#" height="50" width="80" style="display:none" />
                        </div>
                        <button type="button" id="btn" class="btn btn-primary">Add Product</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div id="GetListProduct"></div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.ckeditor.com/4.16.0/standard/ckeditor.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/javascript.js"></script>

    <script>
        $(document).ready(function () {
            SelectProduct();

        });
        $("#Upload").click(function () {
          
                uploadFile()

               
        })
        $(function () {
            $('input[type="file"]').change(function () {
                if ($(this).val() != "") {
                    $(this).css('display', 'block');
                } else {
                    $(this).css('color', 'transparent');
                }
            });
        })
        document.getElementById('product_Image').onchange = evt => {
            const [file] = document.getElementById('product_Image').files;
            if (file) {
                const img = document.getElementById('blah');
                img.src = URL.createObjectURL(file);
                img.style.display = 'block';
            }
        }

        CKEDITOR.replace('product_description');
        document.getElementById("product_name").addEventListener("input", alphabetOnly);

        document.getElementById("btn").addEventListener("click", function (event) {
            if (!validateSelectInput()) {
                event.preventDefault(); // Prevent form submission if validation fails
            }
        });

        $('.modal .close, .modal-footer .btn-danger').click(function () {
            try {
                setTimeout(function () {
                    $('#Modal').modal('hide').on('hidden.bs.modal', function () {
                        resetFormFields();
                        afterModalHidden();
                    });
                    resetFormFields();
                }, 500); // 500ms delay before executing the changes
            } catch (error) {
                console.log(error);
            }
        });

        function SelectProduct() {
            $.ajax({
                url: '/Admin/PrtProductList',
                type: 'GET',
                success: function (res) {
                    $("#GetListProduct").html(res);
                }
            })
        }
        $("#download").click(function(){
            var result = confirm("Are u sure want to download ");
            if (result) {
                downloadExcel()
            }
        })
        function downloadExcel() {
            // Example data
            var data = [
                ["CategoeryId","ProductName","ProductPrice","ProductDiscription", "IsActive"],

            ];

            // Create a new workbook
            var workbook = XLSX.utils.book_new();
            var sheet = XLSX.utils.aoa_to_sheet(data);

            // Add the worksheet to the workbook
            XLSX.utils.book_append_sheet(workbook, sheet, "Sheet1");

            // Generate an XLSX file as a Blob object
            var wbout = XLSX.write(workbook, { bookType: "xlsx", type: "array" });

            // Create a Blob object from array buffer
            var blob = new Blob([wbout], { type: "application/octet-stream" });

            // Create a download link element
            var downloadLink = document.createElement("a");
            var url = URL.createObjectURL(blob);

            downloadLink.href = url;
            downloadLink.download = "productexcel.xlsx"; // File name
            document.body.appendChild(downloadLink);
            downloadLink.click();

            // Cleanup
            setTimeout(function () {
                document.body.removeChild(downloadLink);
                window.URL.revokeObjectURL(url);
            }, 0);
        }
        document.getElementById("product_price").addEventListener("keypress", function (event) {
            var price = document.getElementById("product_price").value;
            var charCode = event.which ? event.which : event.keyCode;

            // Allow only numeric characters and backspace
            if ((charCode < 48 || charCode > 57) && charCode !== 8) {
                event.preventDefault();
            }
            if (price.length >= 10) {
                event.preventDefault();
            }
        });
        function uploadFile() {
            var formData = new FormData();
            var file = $('#file')[0].files[0];

            formData.append('file', file);

            $.ajax({
                type: "POST",
                url: "/admin/ProductUpload",
                data: formData,
                processData: false,
                contentType: false,
                success: function (res) {
                    debugger;
                    alert('File uploaded successfully')
                   SelectProduct();
                   $("file").val('');

                },
                error: function (errResponse) {
                    // Handle error response here
                    console.error('Error uploading file:', errResponse);
                }
            });
        }


    </script>

</body>
</html>
